basePath: /
definitions:
  controllers.VtexOrderEvent:
    properties:
      currentState:
        type: string
      lastChange:
        type: string
      orderId:
        type: string
      salesChannel:
        type: string
    type: object
  models.AtualizarChaveRequest:
    properties:
      chave:
        example: chave-1234
        type: string
      conta:
        example: Conta de exemplo
        type: string
      status:
        example: Ativada
        type: string
    type: object
  models.Chave:
    properties:
      chave:
        type: string
      conta:
        type: string
      cpf:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      id:
        type: integer
      nome:
        type: string
      status:
        type: string
      updated_at:
        type: string
    type: object
  models.CriarChaveRequest:
    properties:
      cpf:
        example: "12345678901"
        type: string
      email:
        example: email do usuário
        type: string
      nome:
        example: nome do usuário
        type: string
    type: object
  models.ErrorResponse:
    properties:
      error:
        example: mensagem de erro
        type: string
    type: object
  models.License:
    properties:
      avisoExpiracaoEnviado:
        type: boolean
      codigo:
        type: string
      codigo_compra:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      id:
        type: integer
      nome:
        type: string
      quantidade:
        description: Novo campo para múltiplas licenças
        type: integer
      status:
        type: string
      ultimoAvisoRenovacao:
        type: boolean
      updated_at:
        type: string
      validade:
        type: integer
    type: object
  models.LicenseRequest:
    properties:
      codigo_compra:
        example: 1234abef
        type: string
      email:
        example: email do usuário
        type: string
      nome:
        example: nome do usuário
        type: string
      quantidade:
        description: Novo campo para múltiplas licenças
        type: integer
      teste:
        description: opcional
        type: boolean
      validade:
        example: 36
        type: integer
    type: object
  models.UsuarioRequest:
    properties:
      email:
        example: teste@exemplo.com
        type: string
      senha:
        example: "123456"
        type: string
    type: object
host: api-licenca.intelbras-cve-pro.com.br
info:
  contact: {}
  description: API para gerenciar licenças de software.
  title: API de Licenças
  version: "1.0"
paths:
  /atualizar-licenca:
    put:
      consumes:
      - application/json
      description: Atualiza o status de uma licença com base no código da licença.
      parameters:
      - description: Código da licença e novo status
        in: body
        name: request
        required: true
        schema:
          properties:
            codigo:
              type: string
            status:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Status atualizado com sucesso
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Erro nos dados enviados
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Licença não encontrada
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro interno
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Atualizar status da licença
      tags:
      - Licenças
  /atualizar-status-chave:
    put:
      consumes:
      - application/json
      description: Atualiza o status de uma chave de acesso existente.
      parameters:
      - description: Dados da chave de acesso
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.AtualizarChaveRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Status atualizado com sucesso
        "400":
          description: Erro nos dados enviados
        "404":
          description: Chave não encontrada
        "500":
          description: Erro interno ao atualizar status da chave de acesso
      security:
      - BearerAuth: []
      summary: Atualizar status da chave de acesso
      tags:
      - Chaves de Acesso
  /buscar-chave:
    get:
      consumes:
      - application/json
      description: Retorna os dados de uma chave de acesso com base na chave, CPF
        ou email.
      parameters:
      - description: Chave de acesso
        in: query
        name: chave
        type: string
      - description: CPF do usuário
        in: query
        name: cpf
        type: string
      - description: Email do usuário
        in: query
        name: email
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Dados da chave de acesso
          schema:
            $ref: '#/definitions/models.Chave'
        "400":
          description: Parâmetros inválidos
        "404":
          description: Chave de acesso não encontrada
        "500":
          description: Erro interno ao buscar chave de acesso
      summary: Buscar chave de acesso
      tags:
      - Chaves de Acesso
  /cadastrar-usuario:
    post:
      consumes:
      - application/json
      description: Cria um novo usuário no banco de dados.
      parameters:
      - description: Dados do usuário
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UsuarioRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Usuário cadastrado com sucesso
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Erro nos dados enviados
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Cadastro de usuário
      tags:
      - Autenticação
  /chaves:
    get:
      consumes:
      - application/json
      description: Lista todas as chaves de acesso cadastradas, com opção de filtrar
        por email ou CPF.
      parameters:
      - description: Filtrar por email
        in: query
        name: email
        type: string
      - description: Filtrar por CPF
        in: query
        name: cpf
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Lista de chaves de acesso
          schema:
            items:
              $ref: '#/definitions/models.Chave'
            type: array
        "404":
          description: Nenhuma chave de acesso encontrada
        "500":
          description: Erro interno ao buscar chaves de acesso
      security:
      - BearerAuth: []
      summary: Listar chaves de acesso
      tags:
      - Chaves de Acesso
  /criar-chave:
    post:
      consumes:
      - application/json
      description: Gera uma chave de acesso única e envia por e-mail, caso o CPF ainda
        não esteja cadastrado.
      parameters:
      - description: Dados da chave de acesso
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CriarChaveRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Chave criada com sucesso
          schema:
            additionalProperties: true
            type: object
        "400":
          description: CPF já cadastrado
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro interno ao processar a chave de acesso ou enviar o e-mail
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Criar chave de acesso
      tags:
      - Chaves de Acesso
  /criar-licenca:
    post:
      consumes:
      - application/json
      description: Gera uma ou mais licenças baseadas na compra e envia um único e-mail
        com os códigos.
      parameters:
      - description: Dados da licença
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.LicenseRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Licenças criadas com sucesso
        "400":
          description: Erro nos dados enviados
        "401":
          description: Não autorizado
        "500":
          description: Erro interno ao processar a licença
      security:
      - BearerAuth: []
      summary: Criar licença(s)
      tags:
      - Licenças
  /licencas:
    get:
      description: Retorna todas as licenças cadastradas ou filtra por código da compra
        e/ou código da licença.
      parameters:
      - description: Código da compra para filtrar
        in: query
        name: codigo_compra
        type: string
      - description: Código da licença para filtrar
        in: query
        name: codigo
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.License'
            type: array
        "401":
          description: Não autorizado
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro interno
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Lista licenças
      tags:
      - Licenças
  /login:
    post:
      consumes:
      - application/json
      description: Autentica o usuário e retorna um token JWT para acesso às rotas
        protegidas.
      parameters:
      - description: Credenciais do usuário
        in: body
        name: request
        required: true
        schema:
          properties:
            email:
              type: string
            senha:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Token JWT
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Erro nos dados enviados
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Credenciais inválidas
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Usuário sem permissão
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login do usuário
      tags:
      - Autenticação
  /recuperar-chave:
    get:
      consumes:
      - application/json
      description: Busca chaves de acesso por email e envia a chave gerada por e-mail
      parameters:
      - description: Email do usuário
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Chave de acesso enviada com sucesso
        "400":
          description: Email inválido
        "404":
          description: Nenhuma chave de acesso encontrada
        "500":
          description: Erro interno ao enviar e-mail
      summary: Recuperar chaves de acesso
      tags:
      - Chaves de Acesso
  /webhook/vtex-vendas:
    post:
      consumes:
      - application/json
      description: Recebe eventos da VTEX com dados do pedido e inicia o processo
        de geração de licença automática
      parameters:
      - description: Assinatura HMAC do corpo da requisição
        in: header
        name: X-VTEX-HMAC-SHA256
        required: true
        type: string
      - description: Evento de pedido VTEX
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/controllers.VtexOrderEvent'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Erro ao ler body ou JSON inválido
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Assinatura inválida
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Webhook da VTEX para pedidos
      tags:
      - Webhook
securityDefinitions:
  BearerAuth:
    description: Insira o token no formato `Bearer {seu_token}`
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
